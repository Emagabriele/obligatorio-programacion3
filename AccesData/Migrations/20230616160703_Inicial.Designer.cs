// <auto-generated />
using System;
using AccesData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesData.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20230616160703_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Entidades.Cabaña", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NumHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumHabitacion"));

                    b.HasKey("Nombre");

                    b.HasIndex("NombreTipo");

                    b.ToTable("Cabañas");
                });

            modelBuilder.Entity("Dominio.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCabaña")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("NombreCabaña");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("Dominio.Entidades.Tipo", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Costo_huesped")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nombre");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.Entidades.Cabaña", b =>
                {
                    b.HasOne("Dominio.Entidades.Tipo", "_unTipo")
                        .WithMany()
                        .HasForeignKey("NombreTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Dominio.Entidades.Capacidad", "Capacidad", b1 =>
                        {
                            b1.Property<string>("CabañaNombre")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("CapacidadCabaña")
                                .HasColumnType("int");

                            b1.HasKey("CabañaNombre");

                            b1.ToTable("Cabañas");

                            b1.WithOwner()
                                .HasForeignKey("CabañaNombre");
                        });

                    b.OwnsOne("Dominio.Entidades.DescripcionCabaña", "Descripcion", b1 =>
                        {
                            b1.Property<string>("CabañaNombre")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Descripcion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CabañaNombre");

                            b1.ToTable("Cabañas");

                            b1.WithOwner()
                                .HasForeignKey("CabañaNombre");
                        });

                    b.OwnsOne("Dominio.Entidades.JacuzziPriv", "JacuzziPrivado", b1 =>
                        {
                            b1.Property<string>("CabañaNombre")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool>("JacuzziPrivado")
                                .HasColumnType("bit");

                            b1.HasKey("CabañaNombre");

                            b1.ToTable("Cabañas");

                            b1.WithOwner()
                                .HasForeignKey("CabañaNombre");
                        });

                    b.Navigation("Capacidad")
                        .IsRequired();

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("JacuzziPrivado")
                        .IsRequired();

                    b.Navigation("_unTipo");
                });

            modelBuilder.Entity("Dominio.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("Dominio.Entidades.Cabaña", "_unaCabaña")
                        .WithMany()
                        .HasForeignKey("NombreCabaña")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Dominio.Entidades.Trabajador", "Trabajador", b1 =>
                        {
                            b1.Property<int>("Mantenimientoid")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Mantenimientoid");

                            b1.ToTable("Mantenimientos");

                            b1.WithOwner()
                                .HasForeignKey("Mantenimientoid");
                        });

                    b.Navigation("Trabajador")
                        .IsRequired();

                    b.Navigation("_unaCabaña");
                });
#pragma warning restore 612, 618
        }
    }
}
